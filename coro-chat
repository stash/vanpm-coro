#!/usr/bin/perl

use AnyEvent;
use AnyEvent::Socket;
use Coro;
use Coro::AnyEvent;
use Coro::Handle;
use Guard;

my %clients;
my $client_counter = 0;

# OK, cheat and use AnyEvent for the main server
my $shutdown = AnyEvent->condvar;
my $server = tcp_server undef, 4554, unblock_sub(\&client);
$shutdown->recv;

sub client {
    my ($fh, $host, $port) = @_;

    my $client_id = ++$client_counter;
    my $h = unblock $fh;

    my $cleanup = guard {
        delete $clients{$client_id};
        $h->close();
        print "$client_id done.\n";
    };

    # prompt for name
    $h->print("Name? ");
    my $name = $h->readline("\n");
    return unless $name;
    chomp $name;

    # client is now available to receive messages
    $clients{$client_id} = $h;

    $h->print("Hi $name, Enter text to chat.\n".
              "A '.' by itself will disconnect you\n");

    while (1) {
        my $chat_msg = $h->readline();
        return unless defined $chat_msg;
        chomp $chat_msg;
        next unless length $chat_msg;

        # disconnect
        return if ($chat_msg eq '.');

        # disconnect *everybody*
        if ($chat_msg =~ /get back to work/) {
            $shutdown->send;
            return;
        }

        # broadcast the message
        my $msg = $name.": ".$chat_msg."\n";
        async {
            # Capture list of client ids since list may change between print()
            # calls.
            my @cids = keys %clients;
            for my $cid (@cids) {
                my $c = $clients{$cid};
                $c->print($msg) if $c;
            }
        };
    }
}
